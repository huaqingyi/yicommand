{"version":3,"sources":["decorators/option.ts"],"names":[],"mappings":";;AACA,qCAAuC;AAIvC,SAAgB,MAAM,CAAC,KAAU,EAAE,OAA0B;IACzD,IAAI,KAAK,CAAC,KAAK,KAAK,oBAAU,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QACxE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YAAE,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;SAAE;QAC3C,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,kBAAgB,OAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;QACpF,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,SAAS,OAAO,CAAkC,MAAe,EAAE,GAAW;QACjF,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YAAE,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;SAAE;QAC7C,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,IAAI,KAAK,EAAE,CAAC;QACxE,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACN,CAAC;AAXD,wBAWC","file":"../../decorators/option.js","sourcesContent":["import { CoreClass } from '../core';\nimport { YCommander } from './command';\n\nexport function option(target: YCommander, attrKey: string): void;\nexport function option(descripton: string, required?: boolean): (target: YCommander, attrKey: string) => void;\nexport function option(props: any, attrKey?: string | boolean) {\n    if (props._root === YCommander && attrKey && typeof (attrKey) === 'string') {\n        if (!props.options) { props.options = {}; }\n        props.options[attrKey] = { descripton: `pleace input ${attrKey}`, required: false };\n        return props;\n    }\n    return function warpper<Y extends CoreClass<YCommander>>(target: Y & any, key: string) {\n        if (!target.options) { target.options = {}; }\n        target.options[key] = { descripton: props, required: attrKey || false };\n        return target;\n    };\n}\n"]}
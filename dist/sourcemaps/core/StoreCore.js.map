{"version":3,"sources":["core/StoreCore.ts"],"names":[],"mappings":"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","file":"../../core/StoreCore.js","sourcesContent":["import colors from 'colors'\nimport { CommandOptions } from '../decorators'\nimport { TaskOptions } from '../decorators/Task'\nimport program from 'commander';\nimport figlet from 'figlet'\nimport _ from 'lodash'\n\ncolors.setTheme({\n    silly: 'rainbow',\n    input: 'grey',\n    verbose: 'cyan',\n    prompt: 'red',\n    info: 'green',\n    data: 'blue',\n    help: 'cyan',\n    warn: 'yellow',\n    debug: 'magenta',\n    error: 'red'\n});\n\nexport class StoreCore {\n    public static _this: StoreCore;\n\n    public static register(): StoreCore {\n        if (!StoreCore._this) StoreCore._this = new this;\n        return StoreCore._this;\n    }\n\n    private tasksOpt: { [key: string]: TaskOptions | undefined };\n    private execsOpt: { [key: string]: string };\n\n    constructor() {\n        this.tasksOpt = {};\n        this.execsOpt = {};\n    }\n\n    command(constructor: Function, context?: CommandOptions) {\n        let c: CommandOptions = { version: '1.0.0' }\n        if (context) c = context;\n        return new Promise(r => {\n            if (c.context) {\n                figlet(c.context, (err, data) => {\n                    if (err) {\n                        console.log('Something went wrong...'.error);\n                        console.dir(err);\n                    } else {\n                        console.log((<string>data)[c.color || 'red']);\n                        r(data);\n                    }\n                })\n            } else {\n                r(true)\n            }\n        }).then(resp => {\n            program.version(c.version);\n            return _.map(this.execsOpt, (v, k) => {\n                program.command(k);\n            });\n        }).then(resp => {\n            return _.map(this.tasksOpt, (opt, key) => {\n                let opts = '';\n                if (opt && opt.option) {\n                    if (_.isArray(opt.option)) opts = opt.option.join(',')\n                    else opts = opt.option;\n                    if (opts) opts = `[${opts}]`\n                }\n                let option = `-${key.slice(0, 1)}, --${key} ${opts}`;\n                program.option(option, opt && opt.explain);\n            });\n        }).then(resp => {\n        }).then(resp => {\n            program.parse(process.argv);\n            let mode = new (<any>constructor);\n            _.map(this.tasksOpt, (opt, key) => {\n                if (program[key]) mode[key](program[key]);\n            });\n            return _.map(this.execsOpt, (v, k) => {\n                program.action(mode[v].bind(mode));\n            });\n        });\n    }\n\n    execs(method: string, context: string) {\n        this.execsOpt[method] = context;\n    }\n\n    tasks(method: string, context?: TaskOptions) {\n        this.tasksOpt = {\n            ...this.tasksOpt,\n            [method]: context\n        }\n    }\n}"]}